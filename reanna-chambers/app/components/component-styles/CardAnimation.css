
:root {
    --cardMaxWidth: 24vw;
    --cardMaxHeight: 34vw;
    --cardWidth: 30vw;
    --cardHeight: 40vh;
    --cardFont: "CardFontNarrow", serif;
}

.cards-container {width: 100%; padding-bottom: 40vh; height: 140vh; position: fixed; top: 0vh; }

.animation-2 {position: fixed; left: 0; margin-left: calc(((100vw / 4) - var(--cardMaxWidth))/ 2); margin-right: calc(((100vw / 4) - var(--cardMaxWidth))/ 2)}

.animation-1 {display: flex; align-items: center; justify-content: center;}

.animation-1-card {position: fixed;}
#AboutCard.animation-1-card {z-index: 4; transform: rotate(55deg) translate(125px, 20px); transition: transform 0.8s ease;}  
#PhotoCard.animation-1-card {z-index: 3; transform: rotate(30deg) translate(85px, 10px); transition: transform 0.8s ease;}
#VideoCard.animation-1-card {z-index: 2; transform: rotate(15deg) translate(45px, 5px); transition: transform 0.8s ease;}  
#ProductionCard.animation-1-card {z-index: 1; transform: rotate(0deg) translate(0px, 0px); transition: transform 0.8s ease;}
  

  
.card-inner {  position: relative;
    border-radius: 10px;
    width: 100%;
    height: 100%;
    max-width: 240px;
    max-height: 340px;
    
    transform-style: preserve-3d; /* Enables 3D transform */
    transition: transform 0.6s; /* Smooth flipping animation */ }

.card { transition: transform 0.2s ease; padding: 5px; perspective: 1000px; height: var(--cardMaxHeight); width: var(--cardMaxWidth); max-width: var(--cardMaxWidth); max-height: var(--cardMaxHeight); min-width: var(--cardMaxWidth); min-height: var(--cardMaxHeight);}
.card:hover {transform: translateY(-150px); cursor: pointer; }

.card-front { background: white; border-radius: 10px; box-shadow: 2px 2px 2px rgba(0,0,0,0.25); }
.card-back{ transform: rotateY(180deg); }
.card-back-design {height: 100%; width: 100%; border-radius: 10px; box-shadow: 2px 2px 2px rgba(0,0,0,0.25); background-color: white; background-image: url('/cards/card-bg.png'); background-size: contain; background-repeat: no-repeat; background-position: center center;}
.card-front, 
.card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden; /* Hides the back when the front is visible */
}

.card-inner:hover {transform: scale(1.1) translateZ(5); z-index: 5!important; cursor: pointer;}

.card.flipped .card-inner {transform: rotateY(180deg);}
.card.flipped .card-front {backface-visibility: hidden;}

/* .positioner-wrapper {opacity: 0} */
.positioner {width: 25%; height: 50px; opacity: 0; background-image: url('/flower-black.png'); background-size: 15px; background-position: center; background-repeat: no-repeat; transition: opacity 0.4s ease}

/* PlayingCardFormat.tsx component styling */
.playing-card { width: 90%; height: 95%; padding: 2.5%;}
.playing-card-top { height: 15%; }
.playing-card-symbol {height: clamp(10px, 3vw, 25px); }
.playing-card-center {height: 60%;}
.playing-card p {font-size: clamp(14px, 4vw, 36px); font-weight: 600; line-height: 2.5rem; padding: 0;}
.card-number {height: 100%; width: 15%; max-width: 30px;  background-size: contain; background-repeat: no-repeat; background-position: 100% top;}
.number-black {background-image: url('../../../public/cards/4-black.png');}
.number-red {background-image: url('../../../public/cards/4-red.png');}

@keyframes wobble {
    0% {
      translate: scale(1)
    }
    50% {
        translate: scale(1.1)
    }
    100% {
        translate: scale(1)
    }
  }